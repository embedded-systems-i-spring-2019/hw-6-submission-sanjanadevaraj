
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity exercise13 is
port(CLK,X1,X2: in std_logic;
Y: out std_logic_vector(2 downto 0);
CS,RD: out std_logic);

end exercise13;

architecture Behavioral of exercise13 is

type state_type is (ST0,ST1,ST2);
signal PS,NS: state_type;

begin

sync_proc: process(CLK,NS)
begin
if rising_edge(CLK) then PS <= NS;
end if;
end process;

comb_proc: process(PS,X1,X2)
begin
case PS is

when ST0 => 
if X1 = '1' then CS <= '1'; RD <= '0'; NS <= ST2; 
else CS <= '0'; RD <= '1'; NS <= ST1;
end if;

when ST1 => 
CS <= '1'; RD <= '1'; NS <= ST2;

when ST2 => 
if X2 = '1' then CS <= '0'; RD <= '1'; NS <= ST2;
else CS <= '0'; RD <= '0'; NS <= ST0;
end if;

when others =>     
CS <= '0'; RD <= '0'; NS <= ST0;
        
end case;
end process;

with PS select Y <= 
"001" when ST0,
"010" when ST1,
"100" when ST2,
"001" when others;  

end Behavioral;
