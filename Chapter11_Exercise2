library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity exercise2 is
port(CLK,X1,X2: in std_logic;
Y: out std_logic_vector(1 downto 0);
Z: out std_logic);
end exercise2;

architecture Behavioral of exercise2 is
type state_type is (ST0,ST1,ST2);
signal PS,NS: state_type;

begin

sync_proc: process(CLK,NS)
begin
if rising_edge(CLK) then PS <= NS;
end if;
end process;

comb_proc: process(PS,X1,X2)
begin
case PS is

when ST0 => 
Z <= '0';
if X1 = '1' then NS <= ST2;
else NS <= ST0;
end if;

when ST1 =>
if X2 = '1' then Z <= '0'; NS <= ST1;
else Z <= '1'; NS <= ST0;
end if;       

when ST2 =>
Z <= '0';
if X2 = '1' then NS <= ST1;
else NS <= ST0;
end if;
    
when others =>  
NS <= ST0;Z <= '0';

end case;
end process;

with PS select Y <= 
"10" when ST0,
"11" when ST1,
"01" when ST2,
"10" when others;  

end Behavioral;
